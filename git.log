[Feat] Added Windows Message Box support for improved exception reporting
2c62306d33d916f0763f11e95e1e9dfa1b5f2b77
[Feat] Updated to C#-Bridge-Interface version 1.0.7488.24763. First versioned dll release
92439452d014368c90a19403ac9df3c57461474c
[Chore] Added JetBrains editor settings to gitignore
575bd3195c5ff0907696ab55b3b6e5b0cf3d28c6
Added help messages to some example scenes. Cleaned up materials
29635c5024f33fd4e415bf3578f0e98ec8505cb3
minor version changes made by Unity
4e3830d3a4d56b1b8e6ee0e76e615a7363c51464
Removed Experimental.PlayerLoop to make compatible with 2019.3
7d9054a158cc1b432da725b1da5f0501a539f436
Added ignore for Jetbrains plugin
24a9d13ec25c6ad6b302ad095149b134551f2ff7
Removed Unnecessary files
d4882f293bef8119ab4c253d1bd73ceb21193d02
Fixed registry check being disabled
4aea27f540ea17a1eafe51337aa7872a7f6bd4a3
Updated Input names to better reflect associated projects. Fixed Camera control for 11_Dynamic Loading and adjusted controls for 9_SpaceNav
1b4df5f1193c0e4b1ed434124ca20c202117838f
VXVoxel fix. holding off replacing vxvoxel until impact assessment
14267e227f21e59aeb37b0896257640ddcbc646c
Cleaned up input naming system
Updated and tested all project -- 10_Voxel needs fixing (does not transform correctly)
Moved Plugins to Voxon base folder
Updated Runtime to test for "VOXON_RUNTIME" path variable
Path variables only check user environment now
5af796fa7d3d660cf5d4c363f69051c27a850c23
Fixed UV bug in Registered Mesh (Broke Animated Textures)
8471d29554d87b71bc879cc2127e7f84eb860570
Fix broken Colour Mode
1db96966c239b6ce1501106cf776a5a961a0073b
Added Touch Screen Menu creation
c72612da1af9fe4996d75d705fafbf1b27c0084a
Added Support For Emulator Camera rotation and distance
ef73463fa3d9c6550ed586d16462a0ee8db60cda
Draw Bulk Voxels
7a8c65597427e60a920763c30a6c3ac9fb937465
Finalised Colour Mixer and reenabled Dual Color mode after fix was applied to C#Bridge
61d231d13ace179a3a8c788c5775705979754666
Disabled Dual Color mode for now as it is buggy
237db22ac7d30a3fb13b84b96b1dae3c7c01b822
Added Colour Swap Mode to allow developers to swap colour palettes on the fly. Will extend into R/B, R/G, and B/G sets in future
14c0fb44308e199666b0e5b0eb9967ef0a9a6ca0
Moved Texture Reflection example script into 13_CameraTextures
988e8a53f9a2583f48aa0ae08440fe1757867276
Added example of drawing camera to a texture. -- Currently requires running in headed mode
55a800aced072c914199b242d84e5fca336c80a9
Added Dynamic Texture Support, Included example scene, VideoPlayer will now be detected by VXComponent, moved package to Unity 2018.4.15f, slowed camera in 11_DynamicLoading, inverted VoxieCamTuner so it appear the world rotates, added support for DrawVoxels, caught and resolved a bug duplicating Textures
c7ec82a1b332afb2df9385b3ef794d0915052f92
As Above
5f339e389a7df178da6f1ee92ba965a8fb4c9292
Corrected mistype in HelixMode script. Added Rainbow object to DynamicLoading (brighter)
6d11bce827f4fc199a4feafbbe8ac698160998f9
Removed forced radius values (unnecessary)
b355f033b17b8c16bc82de1540520133cc444cbb
Exposed the Internal and External Radius functions
778291bb030dd6f9ec938f64958ce57ea0af0a72
Moved Helix temp script into Example 11 folder
64be8dfbd3d83b8e14a4c40fea758ef215073aca
No longer detailing items to be skipped in the log
e8c6678a1118f0640e451e02cd5538f29309a21d
Updated Camera Turner, now more closely mimics VoxieOs bindings and integrates bother SpaceNav and Keyboard
55471cdbe2b6ae28e423ec8ed2bc7db6a2ec254b
Added arrow keys to keyboard enum
167c8c705708c61a32b1dc76bc05ec8ba7b00612
Additional Content to previous commit
f28ff854a2a584b11b78c2288436568d11847387
Added Camera Navigator (Present in Example 11, will move to general examples), Dynamic Object loading (Example 11), Initial Helix function, and corrected detection of main textures for components
37735da4e5386c8baa6b12345616096f4fbe1697
Added SpaceMouse example scripts, new example scene for Voxels and fixed the Randomised Voxel script
80e367e7ef72ef1334de9fed57b580e91ae013f5
Moved SpaceNav example script, fixed non-uniform texture bug
a22ce0d4752384a3b3f516abddcffa77a1564be2
Added SDK / DLL version functions
32cd9255b93e88adffd1cf7c3ea6a7a890ef213d
Added Space Nav support, corrected Numpad_Minux spelling mistake
074192f2ab7d36f1c94907473b6f718972e1e2e1
Pre SpaceNav candidate
5f5ec0d0f30904d19976015a59972f17f661e9a0
Moved Voxon specific code into Voxon(...) namespaces. Unified naming conventions, implemented (almost) all clean up suggested by rider
015cfbdd0d2c447bd8453b45134a91eeee6f64d2
Prepping to swap to internal model
085652694f1bcd454059ca54a88c800cfcefa85d
Removed extra log lines
75ffa95d95f9030cc6b06a25e8b9edf88a394c27
Added level loading example
2aaa019f01848bd39714a64c7df67e0c105b4136
Removed old IRuntimePromise.dll, it's now part of the C# bridge
ac14f359db56ff9ed27e76bf7cdafacadea395fb
Fixed ComputeShader cleanup
eb41ba5918b2e8aec06a0ed16aba8aff81e2c232
Swapped in C# Bridge Interface
758d5b10c47fb8f89469ebe73be71fb370225b36
Updated Unity Plugin to use C# bridge. System is now DLL agnostic
8fc762471bb01b4874e3caf39438fd80dd61c25d
Updated system to Unity 2019, handle the new VX interface
5c32fb8375f9de341b93bdba33a3c748bc5e5b8a
Added MVC for Box, Cube, Sphere, and Particles
99b04d04c4af4adedce82b50ac7dd5ccb61b395a
Updated VX bridge. Fixed types to use new draw functions. Began move to MVC model
97f3d38ec314f59f4fa6e6132fb18b459ca7e186
Moved functions to use point3d instead of floats for points passed to VX.dll
Renamed IVXDrawable to IDrawable (it's already in the Voxon namespace)
b9e7c79884b515c092306f5da8a90ce59cc925c0
Added new types; Box, Cube, Sphere, Voxel, Line, Fixed Active in Hierarchy bug, Fixed Name problem
b85a61b66bea65d808913490fcce11a6e3ad1ed4
Added Prebuilding of Mesh data
98b7f7ce7c60f9570936d57332c133017db34d93
Latest Build
4ea39ec7f1b27970ae5d2e8b9672e03a35299c38
Added handling for unhidden components
b08df4b953036f1c6cc11c8c09bc1e21a5b4d9c5
Moved over to interfaces to allow for drawing
fd6d5331064b7a8a393ac153a57fb60aa94c0d94
added black mat to blank objects
504db8e7acf06a89a5e3d12369dad5b6b424e7e9
Cleaned up Warnings for non-use of variables, removed debug logs for creation / access of singletons
8d6bad34515436c96faf8e136b36a81830abd9fb
Now handles Save when no Streaming Assets folder
3f9b975bf913f51ac1f7dd413684f33e0605c56d
Now handles StreamingAssets not existing
7b1a6b29bcbebff0f7286c681b99bed00f43c972
Updated VX.dll path
Moved 'VoxonPhotonics/Examples/Scenes' to 'Scenes/Voxon Examples' (searching for these will now be easier)
Removed duplicate StreamingAssets
7e7a1f4c94cfc301a287d3716921dcd760e47513
Changed install directory to 'Voxon Photonics\SDK'

Updated VX.dll to handle new installation directory (bringing it inline with the current installer)
98e198a46f1423dc13af297fce68cfce6fdd2760
Renamed VoxonUnity to VoxonPhotonics
ac4bada487e210813d90b013d06650e75feb8db2
removed the Poltex Tranform dll as it's currently being used
980d3a30e9977c0eef6afea6d5ba8fb5d27ddc12
replaced deprecated AudioClip constructor
0b8bb9beaca99bbe5e84e86eaccd530207bb5527
Removed more superflous files, fixed batch file to support paths or executables with spaces
76a7ee30ef84518e24a76db10da05f51a930ba2c
Removing unused scenes
da6b8149c93bcf5aa8f793c4f77d5524bf0719c8
Fixed input hashcode incompatibility. Will now allow input files to work across machines
52d513cc2f6cd14266283db4bc21ba6e9f250180
Removed superflous methods from MeshRegister
8b4075ba9b6cfba29077650150eea4816b3726c4
Fixed particles, added more tests
2637d73111280073c273a4fdbb6149f52b0ed80a
Begun Adding Tests
b8b846d7dd008d5c927ceac7d70de5e56e41658b
Fixed example scenes after many scripts broke
290f432236999bfce7eaf3da39ef538ed4373a9a
Licence moved to non-free
Fixed lag due to copying array vs accessing members
Removed CaptureVolume prefab; added _camera prefab
1fb77fe41747548810b6e72f83391e42bb20561e
Swapped Ethan for AJ the Mixamo character. This isn't a permanent solution (license restrictions), simply using him as an example of a well made character who doesn't glitch
582d34ea9a4c3cf70f102f053a1ba1890794beb0
Added Mesh Reimporter to fix some scale issues
85dc934e3f51bb2dbf9d3e859cc8af9e5739667f
*Bad Commit* Will start branching when we have something releasable
d5b9d21930bb9100b0984ed475d71decc1fa8e24
Fixed GameObject adding VXComponent to particle systems
727514297f4a458b88e25dc13bed4b90f810b0c2
initial commit Version 3.0 in progress
124d7d6579e1d1bc8d1306c3118426e73f05e211
